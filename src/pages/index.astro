---
const cards = [
  { value: 'A', suit: '♠️' },
  { value: 'K', suit: '♥️' },
  { value: 'Q', suit: '♣️' },
  { value: 'J', suit: '♦️' },
  { value: '10', suit: '♠️' },
];
---

<html lang="en">
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="viewport" content="width=device-width" />
		<meta name="generator" content={Astro.generator} />
		<title>Muse flipper</title>
		<style>
			body {
				background-color: #1a0f2e;
				color: #e6c9ff;
				font-family: 'Courier New', Courier, monospace;
			}
			h1 {
				text-align: center;
				font-size: 2.5em;
				text-shadow: 0 0 10px #9d4edd;
			}
			.card-stack {
				position: relative;
				width: 200px;
				height: 280px;
				margin: 50px auto;
				perspective: 1000px;
			}
			.card {
				position: absolute;
				width: 100%;
				height: 100%;
				background-color: #c9b6e4;
				border-radius: 10px;
				box-shadow: 0 0 20px rgba(157, 78, 221, 0.5);
				display: flex;
				justify-content: center;
				align-items: center;
				font-size: 48px;
				font-weight: bold;
				transition: transform 0.3s ease, box-shadow 0.3s ease;
				background-image: url('https://www.transparenttextures.com/patterns/white-paperboard.png');
			}
			.card:nth-child(1) { transform: translateY(0) rotate(0deg); }
			.card:nth-child(2) { transform: translateY(-5px) rotate(0deg); }
			.card:nth-child(3) { transform: translateY(-10px) rotate(0deg); }
			.card:nth-child(4) { transform: translateY(-15px) rotate(0deg); }
			.card:nth-child(5) { transform: translateY(-20px) rotate(0deg); }
			.card-content {
				display: flex;
				flex-direction: column;
				align-items: center;
				color: #4a0e4e;
				text-shadow: 0 0 5px #9d4edd;
			}
			.card-suit {
				font-size: 72px;
			}
			.shuffle-button {
				display: block;
				margin: 20px auto;
				padding: 15px 30px;
				font-size: 18px;
				cursor: pointer;
				background-color: #4a0e4e;
				color: #e6c9ff;
				border: none;
				border-radius: 5px;
				transition: all 0.3s ease;
				font-family: 'Courier New', Courier, monospace;
				text-transform: uppercase;
				letter-spacing: 2px;
				box-shadow: 0 0 10px rgba(157, 78, 221, 0.5);
			}
			.shuffle-button:hover {
				background-color: #9d4edd;
				box-shadow: 0 0 20px rgba(157, 78, 221, 0.8);
			}
		</style>
	</head>
	<body>
		<h1>Choose your card</h1>
		
		<div class="card-stack">
			{cards.map((card, index) => (
				<div class="card" data-index={index}>
					<div class="card-content">
						<div>{card.value}</div>
						<div class="card-suit">{card.suit}</div>
					</div>
				</div>
			))}
		</div>

		<button class="shuffle-button">Reveal a random card</button>

		<script>
			const cardElements = document.querySelectorAll('.card');
			const shuffleButton = document.querySelector('.shuffle-button');

			shuffleButton.addEventListener('click', () => {
				shuffleCards();
			});

			function shuffleCards() {
				let shuffleCount = 0;
				const maxShuffles = 10;
				const shuffleInterval = setInterval(() => {
					if (shuffleCount >= maxShuffles) {
						clearInterval(shuffleInterval);
						selectRandomCard(true);
						return;
					}
					selectRandomCard(false);
					shuffleCount++;
				}, 200);
			}

			function selectRandomCard(isFinal) {
				const randomIndex = Math.floor(Math.random() * cardElements.length);
				cardElements.forEach((card, index) => {
					if (index === randomIndex) {
						card.style.transform = isFinal 
							? 'translateY(-50px) rotate(0deg)' 
							: 'translateY(-30px) rotate(0deg)';
						card.style.zIndex = '10';
					} else {
						card.style.transform = `translateY(${index * -5}px) rotate(${Math.random() * 6 - 3}deg)`;
						card.style.zIndex = '0';
					}
				});
			}
		</script>
	</body>
</html>
